/*
  http://arduinolab.pw/index.php/2015/12/05/dinamicheskaya-indikaciya-i-7-segmentnyj-indikator-modul-na-dvux-74hc595/
*/

#define SCLK PA7  // пины ардуины
#define RCLK PA6
#define DIO PA5

byte digitBuffer[4];

void setup() {
  pinMode(RCLK, OUTPUT);
  pinMode(SCLK, OUTPUT);
  pinMode(DIO, OUTPUT);
}


void loop() {
  // заполняем массив
  digitBuffer[0] = 1;
  digitBuffer[1] = 2;
  digitBuffer[2] = 10;
  digitBuffer[3] = 3;
  digitBuffer[4] = 4;
  digitBuffer[5] = 5;

  // однократно выводим данные из массива на 7сигмент
  // тоесть функция должна постоянно крутится.
  showDisplay();

}

void showDisplay() {

  const byte digit[11] = {  // маска для 7 сигментного индикатора
    0b01000000, // 0
    0b01111001, // 1
    0b00100100, // 2
    0b00110000, // 3
    0b00011001, // 4
    0b00010010, // 5
    0b00000010, // 6
    0b01111000, // 7
    0b00000000, // 8
    0b00010000, // 9
    0b10000000  //:
  };

  const byte chr[6] = { // маска для разряда
    0b00100000,
    0b00010000,
    0b00001000,
    0b00000100,
    0b00000010,
    0b00000001
  };

  // отправляем в цикле по два байта в сдвиговые регистры
  for (byte i = 0; i <= 5; i++) {
    digitalWrite(RCLK, LOW); // открываем защелку
    shiftOutp(DIO, SCLK, MSBFIRST, digit[digitBuffer[i]]);  // отправляем байт с "числом"
    shiftOutp(DIO, SCLK, MSBFIRST, chr[i]);   // включаем разряд
    digitalWrite(RCLK, HIGH); // защелкиваем регистры
    delay(1); // ждем немного перед отправкой следующего "числа"
  }
}

void shiftOutp(uint8_t dataPin, uint8_t clockPin, uint8_t bitOrder, uint8_t val) 
{ 
uint8_t i; 

for (i = 0; i < 8; i++) { 
if (bitOrder == LSBFIRST) 
digitalWrite(dataPin, !!(val & (1 << i))); 
else 
digitalWrite(dataPin, !!(val & (1 << (7 - i)))); 

digitalWrite(clockPin, HIGH); // тактовые импульсы, происходящие при каждом сдвиге на 1 бит
digitalWrite(clockPin, LOW); 
} 
}
